package com.hashedin.financialgoal.controller;

import java.time.LocalDate;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.hashedin.financialgoal.dto.FinancialGoalDto;
import com.hashedin.financialgoal.service.IFinancialGoalService;
import com.hashedin.financialgoal.utility.ResponseModel;

import jakarta.validation.Valid;

@RestController
@RequestMapping("/goal")
public class FinancialGoalRepository {

    @Autowired
    private IFinancialGoalService financialGoalService;

    @PostMapping("/create")
    public ResponseEntity<ResponseModel> saveGoal(@RequestBody FinancialGoalDto goalDto) {
        return financialGoalService.saveGoal(goalDto);
    }

    @DeleteMapping("/delete/{goalId}")
    public ResponseEntity<ResponseModel> deleteFinancialGoal(@PathVariable int goalId) {
        return financialGoalService.deleteFinancialGoal(goalId);
    }

    @GetMapping("/all")
    public ResponseEntity<ResponseModel> getAllFinancialGoals() {
        return financialGoalService.getAllFinancialGoals();
    }

    @PutMapping("/update/{goalId}")
    public ResponseEntity<ResponseModel> updateFinancialGoal(@PathVariable int goalId, @Valid @RequestBody FinancialGoalDto financialGoalDto) {
        return financialGoalService.updateFinancialGoal(goalId, financialGoalDto);
    }

    @GetMapping("/user/{userId}")
    public ResponseEntity<ResponseModel> getFinancialGoalsByUserId(@PathVariable int userId) {
        return financialGoalService.getFinancialGoalsByUserId(userId);
    }

    @GetMapping("/startDate/{startDate}")
    public ResponseEntity<ResponseModel> getFinancialGoalsByStartDate(@PathVariable @DateTimeFormat(pattern = "yyyy-MM-dd") LocalDate startDate) {
        return financialGoalService.getFinancialGoalsByStartDate(startDate);
    }

    @GetMapping("/endDate/{endDate}")
    public ResponseEntity<ResponseModel> getFinancialGoalsByEndDate(@PathVariable @DateTimeFormat(pattern = "yyyy-MM-dd") LocalDate endDate) {
        return financialGoalService.getFinancialGoalsByEndDate(endDate);
    }

    @GetMapping("/betweenDates/{startDate}/{endDate}")
    public ResponseEntity<ResponseModel> getFinancialGoalsBetweenDates(@PathVariable @DateTimeFormat(pattern = "yyyy-MM-dd") LocalDate startDate,
                                                                       @PathVariable @DateTimeFormat(pattern = "yyyy-MM-dd") LocalDate endDate) {
        return financialGoalService.getFinancialGoalsBetweenDates(startDate, endDate);
    }

    @GetMapping("/relatedGoals/{userId}/{startDate}/{endDate}")
    public ResponseEntity<ResponseModel> getRelatedFinancialGoals(@PathVariable int userId,
                                                                  @PathVariable @DateTimeFormat(pattern = "yyyy-MM-dd") LocalDate startDate,
                                                                  @PathVariable @DateTimeFormat(pattern = "yyyy-MM-dd") LocalDate endDate) {
        return financialGoalService.getRelatedFinancialGoals(userId, startDate, endDate);
    }
    
    @PostMapping("/addExpense")
    public ResponseEntity<ResponseModel> addExpense(@Valid @RequestBody GoalAddAmountDto amountDto) {
        return financialGoalService.addExpense(amountDto);
    }
}

